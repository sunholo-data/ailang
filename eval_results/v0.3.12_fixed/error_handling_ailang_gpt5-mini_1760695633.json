{
  "id": "error_handling",
  "lang": "ailang",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 5763,
  "output_tokens": 305,
  "total_tokens": 6068,
  "cost_usd": 0.00205075,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 19,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-17T12:07:13.662772+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\ntype Result[a] = Ok(a) | Err(string)\n\nexport func parse_int(s: string) -\u003e Result[int] {\n  match s {\n    \"10\" =\u003e Ok(10),\n    _ =\u003e Err(\"Invalid integer\")\n  }\n}\n\nexport func divide_safe(a: int, b: int) -\u003e Result[int] {\n  if b == 0\n  then Err(\"Division by zero\")\n  else Ok(a / b)\n}\n\nexport func main() -\u003e () ! {IO} {\n  {\n    let r1 = match parse_int(\"10\") {\n      Ok(v) =\u003e divide_safe(v, 2),\n      Err(msg) =\u003e Err(msg)\n    };\n    match r1 {\n      Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n      Err(m) =\u003e println(\"Error: \" ++ m)\n    };\n\n    let r2 = match parse_int(\"10\") {\n      Ok(v) =\u003e divide_safe(v, 0),\n      Err(msg) =\u003e Err(msg)\n    };\n    match r2 {\n      Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n      Err(m) =\u003e println(\"Error: \" ++ m)\n    };\n\n    let r3 = parse_int(\"abc\");\n    match r3 {\n      Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n      Err(m) =\u003e println(\"Error: \" ++ m)\n    }\n  }\n}",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false,
  "prompt_version": "v0.3.12"
}