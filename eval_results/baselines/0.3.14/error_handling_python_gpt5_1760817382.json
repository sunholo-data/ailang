{
  "id": "error_handling",
  "lang": "python",
  "model": "gpt5",
  "seed": 42,
  "input_tokens": 270,
  "output_tokens": 280,
  "total_tokens": 550,
  "cost_usd": 0.0031375000000000005,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 35,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-18T21:56:22.703892+02:00",
  "code": "from typing import Generic, TypeVar\n\nT = TypeVar(\"T\")\n\n\nclass Result(Generic[T]):\n    pass\n\n\nclass Ok(Result[T]):\n    def __init__(self, value: T):\n        self.value = value\n\n\nclass Err(Result[T]):\n    def __init__(self, message: str):\n        self.message = message\n\n\ndef parse_int(s: str) -\u003e Result[int]:\n    try:\n        return Ok(int(s))\n    except (ValueError, TypeError):\n        return Err(\"Invalid integer\")\n\n\ndef divide_safe(a: int, b: int) -\u003e Result[int]:\n    if b == 0:\n        return Err(\"Division by zero\")\n    return Ok(a // b)\n\n\ndef print_result(r: Result[int]) -\u003e None:\n    if isinstance(r, Ok):\n        print(f\"Result: {r.value}\")\n    elif isinstance(r, Err):\n        print(f\"Error: {r.message}\")\n\n\nres1 = parse_int(\"10\")\nres1 = divide_safe(res1.value, 2) if isinstance(res1, Ok) else res1\nprint_result(res1)\n\nres2 = parse_int(\"10\")\nres2 = divide_safe(res2.value, 0) if isinstance(res2, Ok) else res2\nprint_result(res2)\n\nres3 = parse_int(\"abc\")\nprint_result(res3)",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}