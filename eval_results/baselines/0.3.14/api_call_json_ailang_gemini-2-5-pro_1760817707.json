{
  "id": "api_call_json",
  "lang": "ailang",
  "model": "gemini-2-5-pro",
  "seed": 42,
  "input_tokens": 128,
  "output_tokens": 105,
  "total_tokens": 233,
  "cost_usd": 0.00121,
  "compile_ok": false,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 15,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stderr": "Error: module loading error: failed to load benchmark/solution.ail (search trace: [Loading module: benchmark/solution.ail]): parse errors in benchmark/solution.ail: [expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:3:20: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:3:32: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:4:19: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:5:1: unexpected token in expression: } PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:8:35: expected next token to be ), got : instead PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:35: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:43: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:48: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:53: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:62: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:71: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:77: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:83: unexpected token in expression: )]\n",
  "expected_stdout": "200\n",
  "timestamp": "2025-10-18T22:01:47.376121+02:00",
  "code": "let url = \"https://httpbin.org/post\"\nlet headers = {\n    \"X-Test-Header\": \"value123\",\n    \"Content-Type\": \"application/json\"\n}\nlet body = \"{\\\"message\\\":\\\"Hello from AILANG\\\",\\\"count\\\":42}\"\n\nlet response = http_request(method: \"POST\", url: url, headers: headers, body: body)\n\nprint(response.status_code)",
  "first_attempt_ok": false,
  "repair_used": true,
  "repair_ok": false,
  "err_code": "PAR_001",
  "repair_tokens_in": 777,
  "repair_tokens_out": 110
}