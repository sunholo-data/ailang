{
  "id": "pattern_matching_complex",
  "lang": "python",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 277,
  "output_tokens": 371,
  "total_tokens": 648,
  "cost_usd": 0.00081125,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 66,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Sum: 18\nMax: 7\n",
  "expected_stdout": "Sum: 18\nMax: 7\n",
  "timestamp": "2025-10-18T21:56:50.654787+02:00",
  "code": "from __future__ import annotations\nfrom dataclasses import dataclass\nfrom typing import Union\n\n@dataclass(frozen=True)\nclass Tree:\n    pass\n\n@dataclass(frozen=True)\nclass Leaf(Tree):\n    value: int\n\n@dataclass(frozen=True)\nclass Node(Tree):\n    left: Tree\n    value: int\n    right: Tree\n\ndef tree_sum(tree: Tree) -\u003e int:\n    match tree:\n        case Leaf(v):\n            return v\n        case Node(l, v, r):\n            return tree_sum(l) + v + tree_sum(r)\n        case _:\n            raise ValueError(\"Unrecognized Tree node\")\n\ndef find_max(tree: Tree) -\u003e int:\n    match tree:\n        case Leaf(v):\n            return v\n        case Node(left, v, right) if v \u003e= find_max(left) and v \u003e= find_max(right):\n            return v\n        case Node(Leaf(lv), v, Leaf(rv)):\n            return max(lv, v, rv)\n        case Node(Leaf(lv), v, right):\n            return max(lv, v, find_max(right))\n        case Node(left, v, Leaf(rv)):\n            return max(find_max(left), v, rv)\n        case Node(left, v, right):\n            return max(find_max(left), v, find_max(right))\n        case _:\n            raise ValueError(\"Unrecognized Tree node\")\n\n# sample tree: Node(Leaf(1), 5, Node(Leaf(3), 7, Leaf(2)))\nsample = Node(Leaf(1), 5, Node(Leaf(3), 7, Leaf(2)))\n\ns = tree_sum(sample)\nm = find_max(sample)\n\nprint(f\"Sum: {s}\")\nprint(f\"Max: {m}\")",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}