{
  "id": "error_handling",
  "lang": "ailang",
  "model": "gpt5",
  "seed": 42,
  "input_tokens": 12140,
  "output_tokens": 561,
  "total_tokens": 12701,
  "cost_usd": 0.01023375,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 16,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stderr": "Error: module loading error: failed to load benchmark/solution.ail (search trace: [Loading module: benchmark/solution.ail]): parse errors in benchmark/solution.ail: [PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:7:45: expected next token to be ), got ( instead PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:7:45: expected next token to be {, got ( instead PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:49: unexpected token in expression: -\u003e PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:61: unexpected token in expression: ) PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:63: unexpected token in expression: -\u003e]\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-18T21:57:39.717753+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\ntype Result[a] = Ok(a) | Err(string)\n\nexport func parse_int(s: string) -\u003e Result[int] {\n  if s == \"10\"\n  then Ok(10)\n  else Err(\"Invalid integer\")\n}\n\nexport func divide_safe(a: int, b: int) -\u003e Result[int] {\n  if b == 0\n  then Err(\"Division by zero\")\n  else Ok(a / b)\n}\n\nexport func printResult(r: Result[int]) -\u003e () ! {IO} {\n  match r {\n    Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n    Err(msg) =\u003e println(\"Error: \" ++ msg)\n  }\n}\n\nexport func main() -\u003e () ! {IO} {\n  let r1 = match parse_int(\"10\") { Ok(n) =\u003e divide_safe(n, 2), Err(m) =\u003e Err(m) };\n  printResult(r1);\n  let r2 = match parse_int(\"10\") { Ok(n) =\u003e divide_safe(n, 0), Err(m) =\u003e Err(m) };\n  printResult(r2);\n  let r3 = parse_int(\"abc\");\n  printResult(r3)\n}",
  "first_attempt_ok": false,
  "repair_used": true,
  "repair_ok": true,
  "err_code": "PAR_001",
  "repair_tokens_in": 6377,
  "repair_tokens_out": 258
}