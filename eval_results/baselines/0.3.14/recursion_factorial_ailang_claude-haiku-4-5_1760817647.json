{
  "id": "recursion_factorial",
  "lang": "ailang",
  "model": "claude-haiku-4-5",
  "seed": 42,
  "input_tokens": 6579,
  "output_tokens": 98,
  "total_tokens": 6677,
  "cost_usd": 0.007069,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": false,
  "duration_ms": 16,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "logic_error",
  "stdout": "factorial(10) = 3628800\n",
  "expected_stdout": "3628800\n",
  "timestamp": "2025-10-18T22:00:47.923072+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\nexport func factorial(n: int) -\u003e int {\n  if n \u003c= 1\n  then 1\n  else n * factorial(n - 1)\n}\n\nexport func main() -\u003e () ! {IO} {\n  let result = factorial(10);\n  println(\"factorial(10) = \" ++ show(result))\n}",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}