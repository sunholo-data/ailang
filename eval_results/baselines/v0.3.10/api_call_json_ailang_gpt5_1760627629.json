{
  "id": "api_call_json",
  "lang": "ailang",
  "model": "gpt5",
  "seed": 42,
  "input_tokens": 119,
  "output_tokens": 88,
  "total_tokens": 207,
  "cost_usd": 0.00102875,
  "compile_ok": false,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 14,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stderr": "Error: module loading error: failed to load benchmark/solution.ail (search trace: [Loading module: benchmark/solution.ail]): parse errors in benchmark/solution.ail: [PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:3:8: expected next token to be ), got : instead expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:3:8: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:3:36: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:4:12: unexpected token in expression: : expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:5:22: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:5:34: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:6:21: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:5: unexpected token in expression: } PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:6: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:9: unexpected token in expression: : expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:9:16: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:9:37: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:10:14: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:11:5: unexpected token in expression: } PAR_NO_PREFIX_PARSE at benchmark/solution.ail:12:3: unexpected token in expression: ) PAR_NO_PREFIX_PARSE at benchmark/solution.ail:14:1: unexpected token in expression: }]\n",
  "expected_stdout": "200\n",
  "timestamp": "2025-10-16T17:13:49.549052+02:00",
  "code": "main {\n  let resp = http.post(\n    url: \"https://httpbin.org/post\",\n    headers: {\n      \"X-Test-Header\": \"value123\",\n      \"Content-Type\": \"application/json\"\n    },\n    json: {\n      \"message\": \"Hello from AILANG\",\n      \"count\": 42\n    }\n  )\n  print(resp.status_code)\n}",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}