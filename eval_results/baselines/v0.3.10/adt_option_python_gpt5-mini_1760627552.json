{
  "id": "adt_option",
  "lang": "python",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 162,
  "output_tokens": 321,
  "total_tokens": 483,
  "cost_usd": 0.0006825000000000001,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 55,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5.0\nError: Division by zero\n",
  "expected_stdout": "Result: 5.0\nError: Division by zero\n",
  "timestamp": "2025-10-16T17:12:32.215965+02:00",
  "code": "from typing import Generic, TypeVar\n\nT = TypeVar('T')\n\nclass Option(Generic[T]):\n    def is_some(self) -\u003e bool:\n        raise NotImplementedError\n\n    def is_none(self) -\u003e bool:\n        return not self.is_some()\n\nclass Some(Option[T]):\n    def __init__(self, value: T):\n        self.value = value\n\n    def is_some(self) -\u003e bool:\n        return True\n\n    def __repr__(self) -\u003e str:\n        return f\"Some({self.value!r})\"\n\nclass NoneOption(Option[None]):\n    _instance = None\n\n    def __new__(cls):\n        if cls._instance is None:\n            cls._instance = super(NoneOption, cls).__new__(cls)\n        return cls._instance\n\n    def is_some(self) -\u003e bool:\n        return False\n\n    def __repr__(self) -\u003e str:\n        return \"None\"\n\nNoneOption = NoneOption()\n\ndef divide(numerator: float, denominator: float) -\u003e Option[float]:\n    if denominator == 0:\n        return NoneOption\n    return Some(numerator / denominator)\n\ndef print_result(result: Option[float]) -\u003e None:\n    if isinstance(result, Some):\n        print(f\"Result: {result.value}\")\n    else:\n        print(\"Error: Division by zero\")\n\nif __name__ == \"__main__\":\n    r1 = divide(10, 2)\n    r2 = divide(10, 0)\n    print_result(r1)\n    print_result(r2)",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}