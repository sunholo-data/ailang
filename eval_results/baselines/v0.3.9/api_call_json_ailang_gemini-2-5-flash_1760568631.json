{
  "id": "api_call_json",
  "lang": "ailang",
  "model": "gemini-2-5-flash",
  "seed": 42,
  "input_tokens": 128,
  "output_tokens": 115,
  "total_tokens": 243,
  "cost_usd": 0.0003259,
  "compile_ok": false,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 4,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stderr": "Error: module loading error: failed to load benchmark/solution.ail (search trace: [Loading module: benchmark/solution.ail]): parse errors in benchmark/solution.ail: [PAR_NO_PREFIX_PARSE at benchmark/solution.ail:1:37: unexpected token in expression: ; expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:3:20: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:3:32: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:4:19: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:5:1: unexpected token in expression: } PAR_NO_PREFIX_PARSE at benchmark/solution.ail:5:2: unexpected token in expression: ; expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:14: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:35: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:8:12: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:9:1: unexpected token in expression: } PAR_NO_PREFIX_PARSE at benchmark/solution.ail:9:2: unexpected token in expression: ; PAR_NO_PREFIX_PARSE at benchmark/solution.ail:10:39: unexpected token in expression: ; PAR_NO_PREFIX_PARSE at benchmark/solution.ail:11:50: unexpected token in expression: ; PAR_NO_PREFIX_PARSE at benchmark/solution.ail:12:28: unexpected token in expression: ;]\n",
  "expected_stdout": "200\n",
  "timestamp": "2025-10-16T00:50:31.760674+02:00",
  "code": "let url = \"https://httpbin.org/post\";\nlet headers = {\n    \"X-Test-Header\": \"value123\",\n    \"Content-Type\": \"application/json\"\n};\nlet body_data = {\n    \"message\": \"Hello from AILANG\",\n    \"count\": 42\n};\nlet body_json = json.encode(body_data);\nlet response = http.post(url, headers, body_json);\nprint(response.status_code);",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}