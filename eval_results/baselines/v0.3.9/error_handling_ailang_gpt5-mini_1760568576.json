{
  "id": "error_handling",
  "lang": "ailang",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 5316,
  "output_tokens": 299,
  "total_tokens": 5615,
  "cost_usd": 0.001927,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 14,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-16T00:49:36.301308+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\ntype Result[a] = Ok(a) | Err(string)\n\nexport func parse_int(s: string) -\u003e Result[int] {\n  if s == \"10\" then Ok(10)\n  else if s == \"0\" then Ok(0)\n  else if s == \"5\" then Ok(5)\n  else if s == \"-5\" then Ok(-5)\n  else Err(\"Invalid integer\")\n}\n\nexport func divide_safe(a: int, b: int) -\u003e Result[int] {\n  if b == 0 then Err(\"Division by zero\") else Ok(a / b)\n}\n\nexport func print_result(res: Result[int]) -\u003e () ! {IO} {\n  match res {\n    Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n    Err(msg) =\u003e println(\"Error: \" ++ msg)\n  }\n}\n\nexport func main() -\u003e () ! {IO} {\n  let r1 = match parse_int(\"10\") {\n    Ok(v) =\u003e divide_safe(v, 2),\n    Err(msg) =\u003e Err(msg)\n  };\n  print_result(r1);\n  let r2 = match parse_int(\"10\") {\n    Ok(v) =\u003e divide_safe(v, 0),\n    Err(msg) =\u003e Err(msg)\n  };\n  print_result(r2);\n  let r3 = parse_int(\"abc\");\n  print_result(r3)\n}",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}