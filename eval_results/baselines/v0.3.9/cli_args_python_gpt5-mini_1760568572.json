{
  "id": "cli_args",
  "lang": "python",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 85,
  "output_tokens": 258,
  "total_tokens": 343,
  "cost_usd": 0.0005372500000000001,
  "compile_ok": true,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 37,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "runtime_error",
  "stderr": "Usage: /var/folders/kv/nxj052r50g7813x2blwc74jw0000gn/T/eval_3552086442.py FILENAME\n",
  "expected_stdout": "15\n",
  "timestamp": "2025-10-16T00:49:32.046635+02:00",
  "code": "#!/usr/bin/env python3\nimport sys\nfrom decimal import Decimal, InvalidOperation\n\ndef main():\n    if len(sys.argv) != 2:\n        sys.stderr.write(f\"Usage: {sys.argv[0]} FILENAME\\n\")\n        sys.exit(1)\n    fname = sys.argv[1]\n    try:\n        with open(fname, 'r', encoding='utf-8') as f:\n            lines = f.readlines()\n    except Exception as e:\n        sys.stderr.write(f\"Error opening file '{fname}': {e}\\n\")\n        sys.exit(1)\n\n    total = Decimal(0)\n    for i, raw in enumerate(lines, 1):\n        s = raw.strip()\n        if not s:\n            continue\n        try:\n            num = Decimal(s)\n        except InvalidOperation:\n            sys.stderr.write(f\"Invalid number on line {i}: {s}\\n\")\n            sys.exit(1)\n        total += num\n\n    # Print as int if integral, otherwise as decimal without unnecessary trailing zeros\n    if total == total.to_integral_value():\n        print(int(total))\n    else:\n        print(format(total.normalize(), 'f'))\n\nif __name__ == \"__main__\":\n    main()",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}