{
  "id": "adt_option",
  "lang": "python",
  "model": "gemini-2-5-pro",
  "seed": 42,
  "input_tokens": 167,
  "output_tokens": 275,
  "total_tokens": 442,
  "cost_usd": 0.0029587500000000004,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 73,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5.0\nError: Division by zero\n",
  "expected_stdout": "Result: 5.0\nError: Division by zero\n",
  "timestamp": "2025-10-17T15:43:59.771714+02:00",
  "code": "from dataclasses import dataclass\nfrom typing import TypeVar, Generic, Union, final\n\nT = TypeVar('T')\n\n@final\n@dataclass(frozen=True)\nclass Some(Generic[T]):\n    value: T\n\n@final\n@dataclass(frozen=True)\nclass Nothing:\n    pass\n\nNONE = Nothing()\n\nOption = Union[Some[T], Nothing]\n\ndef safe_divide(numerator: float, divisor: float) -\u003e Option[float]:\n    if divisor == 0:\n        return NONE\n    return Some(numerator / divisor)\n\ndef main():\n    # Test case 1: Successful division\n    result1 = safe_divide(10, 2)\n    match result1:\n        case Some(value):\n            print(f\"Result: {value}\")\n        case Nothing():\n            print(\"Error: Division by zero\")\n\n    # Test case 2: Division by zero\n    result2 = safe_divide(10, 0)\n    match result2:\n        case Some(value):\n            print(f\"Result: {value}\")\n        case Nothing():\n            print(\"Error: Division by zero\")\n\nif __name__ == \"__main__\":\n    main()",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}