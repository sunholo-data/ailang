{
  "id": "higher_order_functions",
  "lang": "python",
  "model": "claude-haiku-4-5",
  "seed": 42,
  "input_tokens": 258,
  "output_tokens": 179,
  "total_tokens": 437,
  "cost_usd": 0.001153,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 18,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 30\n",
  "expected_stdout": "Result: 30\n",
  "timestamp": "2025-10-17T15:42:31.854952+02:00",
  "code": "def compose(f, g):\n    \"\"\"Returns a function that computes f(g(x))\"\"\"\n    return lambda x: f(g(x))\n\n\ndef add(x, y):\n    \"\"\"Adds two numbers\"\"\"\n    return x + y\n\n\ndef multiply(x, y):\n    \"\"\"Multiplies two numbers\"\"\"\n    return x * y\n\n\n# Create partial applications using lambda\nadd5 = lambda x: add(5, x)\ndouble = lambda x: multiply(2, x)\n\n# Create composed function\nadd5_then_double = compose(double, add5)\n\n# Apply the composed function to 10\nresult = add5_then_double(10)\n\n# Print the result\nprint(f\"Result: {result}\")",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}