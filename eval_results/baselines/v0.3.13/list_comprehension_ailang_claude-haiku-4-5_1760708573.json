{
  "id": "list_comprehension",
  "lang": "ailang",
  "model": "claude-haiku-4-5",
  "seed": 42,
  "input_tokens": 6724,
  "output_tokens": 513,
  "total_tokens": 7237,
  "cost_usd": 0.009289,
  "compile_ok": false,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 15,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stderr": "Error: module loading error: failed to load benchmark/solution.ail (search trace: [Loading module: benchmark/solution.ail]): parse errors in benchmark/solution.ail: [PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:7:35: expected next token to be ), got ( instead PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:7:35: expected next token to be {, got ( instead PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:41: unexpected token in expression: -\u003e PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:48: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:52: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:63: unexpected token in expression: ) PAR_NO_PREFIX_PARSE at benchmark/solution.ail:7:65: unexpected token in expression: -\u003e PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:17:24: expected next token to be ), got ( instead PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:17:24: expected next token to be {, got ( instead PAR_NO_PREFIX_PARSE at benchmark/solution.ail:17:30: unexpected token in expression: -\u003e PAR_NO_PREFIX_PARSE at benchmark/solution.ail:17:36: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:17:40: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:17:51: unexpected token in expression: ) PAR_NO_PREFIX_PARSE at benchmark/solution.ail:17:53: unexpected token in expression: -\u003e PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:24:25: expected next token to be ), got ( instead PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:24:25: expected next token to be {, got ( instead PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:36: unexpected token in expression: -\u003e PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:42: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:47: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:52: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:56: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:67: unexpected token in expression: ) PAR_NO_PREFIX_PARSE at benchmark/solution.ail:24:69: unexpected token in expression: -\u003e]\n",
  "expected_stdout": "Sum of squares of evens: 220\n",
  "timestamp": "2025-10-17T15:42:53.187796+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\ntype List[a] = Cons(a, List[a]) | Nil\n\nexport func filter(predicate: func(int) -\u003e bool, xs: List[int]) -\u003e List[int] {\n  match xs {\n    Nil =\u003e Nil,\n    Cons(head, tail) =\u003e\n      if predicate(head)\n      then Cons(head, filter(predicate, tail))\n      else filter(predicate, tail)\n  }\n}\n\nexport func map(f: func(int) -\u003e int, xs: List[int]) -\u003e List[int] {\n  match xs {\n    Nil =\u003e Nil,\n    Cons(head, tail) =\u003e Cons(f(head), map(f, tail))\n  }\n}\n\nexport func fold(f: func(int, int) -\u003e int, acc: int, xs: List[int]) -\u003e int {\n  match xs {\n    Nil =\u003e acc,\n    Cons(head, tail) =\u003e fold(f, f(acc, head), tail)\n  }\n}\n\nexport func fromArray(arr: [int]) -\u003e List[int] {\n  match arr {\n    [] =\u003e Nil,\n    _ =\u003e Cons(head(arr), fromArray(tail(arr)))\n  }\n}\n\nexport func main() -\u003e () ! {IO} {\n  let numbers = fromArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  \n  let isEven = func(n: int) -\u003e bool {\n    n % 2 == 0\n  };\n  \n  let square = func(n: int) -\u003e int {\n    n * n\n  };\n  \n  let add = func(a: int, b: int) -\u003e int {\n    a + b\n  };\n  \n  let evens = filter(isEven, numbers);\n  let squared = map(square, evens);\n  let result = fold(add, 0, squared);\n  \n  println(\"Sum of squares of evens: \" ++ show(result))\n}",
  "first_attempt_ok": false,
  "repair_used": true,
  "repair_ok": false,
  "err_code": "PAR_001",
  "repair_tokens_in": 8083,
  "repair_tokens_out": 472
}