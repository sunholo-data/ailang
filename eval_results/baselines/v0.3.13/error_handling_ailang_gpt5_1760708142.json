{
  "id": "error_handling",
  "lang": "ailang",
  "model": "gpt5",
  "seed": 42,
  "input_tokens": 5763,
  "output_tokens": 278,
  "total_tokens": 6041,
  "cost_usd": 0.00998375,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 19,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-17T15:35:42.380838+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\ntype Result[a] = Ok(a) | Err(string)\n\nexport func parse_int(s: string) -\u003e Result[int] {\n  if s == \"10\"\n  then Ok(10)\n  else Err(\"Invalid integer\")\n}\n\nexport func divide_safe(a: int, b: int) -\u003e Result[int] {\n  if b == 0\n  then Err(\"Division by zero\")\n  else Ok(a / b)\n}\n\nexport func print_result_int(res: Result[int]) -\u003e () ! {IO} {\n  match res {\n    Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n    Err(msg) =\u003e println(\"Error: \" ++ msg)\n  }\n}\n\nexport func main() -\u003e () ! {IO} {\n  let r1 = parse_int(\"10\");\n  match r1 {\n    Ok(n) =\u003e print_result_int(divide_safe(n, 2)),\n    Err(msg) =\u003e println(\"Error: \" ++ msg)\n  };\n  let r2 = parse_int(\"10\");\n  match r2 {\n    Ok(n) =\u003e print_result_int(divide_safe(n, 0)),\n    Err(msg) =\u003e println(\"Error: \" ++ msg)\n  };\n  let r3 = parse_int(\"abc\");\n  print_result_int(r3)\n}",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}