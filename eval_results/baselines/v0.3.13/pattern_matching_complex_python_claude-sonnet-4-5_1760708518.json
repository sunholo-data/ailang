{
  "id": "pattern_matching_complex",
  "lang": "python",
  "model": "claude-sonnet-4-5",
  "seed": 42,
  "input_tokens": 1146,
  "output_tokens": 560,
  "total_tokens": 1706,
  "cost_usd": 0.0051719999999999995,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 57,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "runtime_error",
  "stderr": "  File \"/var/folders/kv/nxj052r50g7813x2blwc74jw0000gn/T/eval_2296262085.py\", line 45\n    ```\n    ^\nSyntaxError: invalid syntax\n",
  "expected_stdout": "Sum: 18\nMax: 7\n",
  "timestamp": "2025-10-17T15:41:58.331967+02:00",
  "code": "from dataclasses import dataclass\nfrom typing import Union\n\n\n@dataclass\nclass Leaf:\n    value: int\n\n\n@dataclass\nclass Node:\n    left: 'Tree'\n    value: int\n    right: 'Tree'\n\n\nTree = Union[Leaf, Node]\n\n\ndef tree_sum(tree: Tree) -\u003e int:\n    match tree:\n        case Leaf(v):\n            return v\n        case Node(left, v, right):\n            return tree_sum(left) + v + tree_sum(right)\n\n\ndef find_max(tree: Tree) -\u003e int:\n    match tree:\n        case Leaf(v):\n            return v\n        case Node(left, v, right):\n            left_max = find_max(left)\n            right_max = find_max(right)\n            return max(v, left_max, right_max)\n\n\ntree = Node(Leaf(1), 5, Node(Leaf(3), 7, Leaf(2)))\n\ntotal = tree_sum(tree)\nmaximum = find_max(tree)\n\nprint(f\"Sum: {total}\")\nprint(f\"Max: {maximum}\")",
  "first_attempt_ok": false,
  "repair_used": true,
  "repair_ok": true,
  "err_code": "WRONG_LANG",
  "repair_tokens_in": 832,
  "repair_tokens_out": 278
}