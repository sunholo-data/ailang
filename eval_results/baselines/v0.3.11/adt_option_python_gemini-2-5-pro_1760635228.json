{
  "id": "adt_option",
  "lang": "python",
  "model": "gemini-2-5-pro",
  "seed": 42,
  "input_tokens": 167,
  "output_tokens": 331,
  "total_tokens": 498,
  "cost_usd": 0.00351875,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 60,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5.0\nError: Division by zero\n",
  "expected_stdout": "Result: 5.0\nError: Division by zero\n",
  "timestamp": "2025-10-16T19:20:28.815611+02:00",
  "code": "import sys\nfrom typing import TypeVar, Generic, Union, final\nfrom dataclasses import dataclass\n\nif sys.version_info \u003c (3, 10):\n    raise RuntimeError(\"This script requires Python 3.10 or newer for pattern matching.\")\n\nT = TypeVar('T')\n\n@final\n@dataclass(frozen=True)\nclass Some(Generic[T]):\n    value: T\n\nOption = Union[Some[T], None]\n\ndef safe_divide(numerator: float, denominator: float) -\u003e Option[float]:\n    \"\"\"\n    Safely divides two numbers, returning an Option type.\n    \"\"\"\n    if denominator == 0:\n        return None\n    return Some(numerator / denominator)\n\ndef main() -\u003e None:\n    \"\"\"\n    Tests the safe_divide function and prints the results.\n    \"\"\"\n    # Test case 1: Successful division\n    result1 = safe_divide(10, 2)\n    match result1:\n        case Some(value):\n            print(f\"Result: {value}\")\n        case None:\n            print(\"Error: Division by zero\")\n\n    # Test case 2: Division by zero\n    result2 = safe_divide(10, 0)\n    match result2:\n        case Some(value):\n            print(f\"Result: {value}\")\n        case None:\n            print(\"Error: Division by zero\")\n\nif __name__ == \"__main__\":\n    main()",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}