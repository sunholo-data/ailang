{
  "id": "error_handling",
  "lang": "python",
  "model": "gpt5",
  "seed": 42,
  "input_tokens": 270,
  "output_tokens": 314,
  "total_tokens": 584,
  "cost_usd": 0.0034775,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 76,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-16T19:21:21.618172+02:00",
  "code": "from dataclasses import dataclass\nfrom typing import Any, Generic, TypeVar, Union\n\nT = TypeVar(\"T\")\n\n\nclass Result(Generic[T]):\n    pass\n\n\n@dataclass(frozen=True)\nclass Ok(Result[T]):\n    value: T\n\n\n@dataclass(frozen=True)\nclass Err(Result[Any]):\n    message: str\n\n\ndef parse_int(s: str) -\u003e Result[int]:\n    try:\n        return Ok(int(s))\n    except ValueError:\n        return Err(\"Invalid integer\")\n\n\ndef divide_safe(a: int, b: int) -\u003e Result[int]:\n    if b == 0:\n        return Err(\"Division by zero\")\n    return Ok(a // b)\n\n\ndef print_result(res: Result[int]) -\u003e None:\n    if isinstance(res, Ok):\n        print(f\"Result: {res.value}\")\n    else:\n        print(f\"Error: {res.message}\")\n\n\n# Test case 1: parse_int(\"10\") then divide by 2\nr1 = parse_int(\"10\")\nr1 = r1 if isinstance(r1, Err) else divide_safe(r1.value, 2)\nprint_result(r1)\n\n# Test case 2: parse_int(\"10\") then divide by 0\nr2 = parse_int(\"10\")\nr2 = r2 if isinstance(r2, Err) else divide_safe(r2.value, 0)\nprint_result(r2)\n\n# Test case 3: parse_int(\"abc\")\nr3 = parse_int(\"abc\")\nprint_result(r3)",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}