{
  "id": "error_handling",
  "lang": "ailang",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 5316,
  "output_tokens": 271,
  "total_tokens": 5587,
  "cost_usd": 0.0018709999999999998,
  "compile_ok": false,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 14,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stdout": "  After instantiation: String -\u003e () ! {IO}\n  Instantiated EffectRow: {IO}\n",
  "stderr": "Error: type error in benchmark/solution (decl 0): undefined variable: parseInt at benchmark/solution.ail:8:9\n",
  "expected_stdout": "Result: 5\nError: Division by zero\nError: Invalid integer\n",
  "timestamp": "2025-10-16T19:16:21.250973+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\ntype Result[a] = Ok(a) | Err(string)\n\nexport func parse_int(s: string) -\u003e Result[int] {\n  match parseInt(s) {\n    Ok(n) =\u003e Ok(n),\n    Err(_) =\u003e Err(\"Invalid integer\")\n  }\n}\n\nexport func divide_safe(a: int, b: int) -\u003e Result[int] {\n  if b == 0 then Err(\"Division by zero\") else Ok(a / b)\n}\n\nexport func print_result(r: Result[int]) -\u003e () ! {IO} {\n  match r {\n    Ok(v) =\u003e println(\"Result: \" ++ show(v)),\n    Err(msg) =\u003e println(\"Error: \" ++ msg)\n  }\n}\n\nexport func main() -\u003e () ! {IO} {\n  {\n    let r1 = match parse_int(\"10\") {\n      Ok(n) =\u003e divide_safe(n, 2),\n      Err(msg) =\u003e Err(msg)\n    };\n    print_result(r1);\n    let r2 = match parse_int(\"10\") {\n      Ok(n) =\u003e divide_safe(n, 0),\n      Err(msg) =\u003e Err(msg)\n    };\n    print_result(r2);\n    let r3 = parse_int(\"abc\");\n    print_result(r3)\n  }\n}",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}