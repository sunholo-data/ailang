{
  "id": "api_call_json",
  "lang": "ailang",
  "model": "gpt5-mini",
  "seed": 42,
  "input_tokens": 119,
  "output_tokens": 63,
  "total_tokens": 182,
  "cost_usd": 0.00015575,
  "compile_ok": false,
  "runtime_ok": false,
  "stdout_ok": false,
  "duration_ms": 15,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "compile_error",
  "stderr": "Error: module loading error: failed to load benchmark/solution.ail (search trace: [Loading module: benchmark/solution.ail]): parse errors in benchmark/solution.ail: [PAR_NO_PREFIX_PARSE at benchmark/solution.ail:1:8: unexpected token in expression: = PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:10: unexpected token in expression: = PAR_UNEXPECTED_TOKEN at benchmark/solution.ail:2:59: expected next token to be ), got = instead PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:59: unexpected token in expression: = expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:76: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:87: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:103: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:122: unexpected token in expression: } PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:123: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:129: unexpected token in expression: = expected ; or }, got : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:140: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:160: unexpected token in expression: , PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:169: unexpected token in expression: : PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:172: unexpected token in expression: } PAR_NO_PREFIX_PARSE at benchmark/solution.ail:2:173: unexpected token in expression: )]\n",
  "expected_stdout": "200\n",
  "timestamp": "2025-10-16T19:16:07.227747+02:00",
  "code": "client = HttpClient()\nresponse = client.post(\"https://httpbin.org/post\", headers={\"X-Test-Header\":\"value123\", \"Content-Type\":\"application/json\"}, json={\"message\":\"Hello from AILANG\", \"count\":42})\nprint(response.status_code)",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}