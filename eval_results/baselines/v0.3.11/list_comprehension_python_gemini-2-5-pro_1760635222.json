{
  "id": "list_comprehension",
  "lang": "python",
  "model": "gemini-2-5-pro",
  "seed": 42,
  "input_tokens": 241,
  "output_tokens": 303,
  "total_tokens": 544,
  "cost_usd": 0.00333125,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": true,
  "duration_ms": 20,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "none",
  "stdout": "Sum of squares of evens: 220\n",
  "expected_stdout": "Sum of squares of evens: 220\n",
  "timestamp": "2025-10-16T19:20:22.539881+02:00",
  "code": "import sys\n\ndef main():\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n    # --- Using list comprehensions ---\n    evens = [n for n in numbers if n % 2 == 0]\n    squares_of_evens = [n**2 for n in evens]\n    result_lc = sum(squares_of_evens)\n    print(f\"Sum of squares of evens: {result_lc}\")\n\n    # --- Alternative using map/filter ---\n    # evens_alt = filter(lambda n: n % 2 == 0, numbers)\n    # squares_of_evens_alt = map(lambda n: n**2, evens_alt)\n    # result_map_filter = sum(squares_of_evens_alt)\n    # print(f\"Sum of squares of evens (map/filter): {result_map_filter}\")\n\n    # --- Concise single-line version ---\n    # result_concise = sum(n**2 for n in numbers if n % 2 == 0)\n    # print(f\"Sum of squares of evens (concise): {result_concise}\")\n\nif __name__ == \"__main__\":\n    main()",
  "first_attempt_ok": true,
  "repair_used": false,
  "repair_ok": false
}