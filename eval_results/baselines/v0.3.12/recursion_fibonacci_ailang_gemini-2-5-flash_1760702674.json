{
  "id": "recursion_fibonacci",
  "lang": "ailang",
  "model": "gemini-2-5-flash",
  "seed": 42,
  "input_tokens": 6091,
  "output_tokens": 109,
  "total_tokens": 6200,
  "cost_usd": 0.0020997999999999998,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": false,
  "duration_ms": 35,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "logic_error",
  "stdout": "Fib(20) = 6765\n",
  "expected_stdout": "6765\n",
  "timestamp": "2025-10-17T14:04:34.924365+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\nexport func fib(n: int) -\u003e int {\n  if n == 0\n  then 0\n  else if n == 1\n  then 1\n  else fib(n - 1) + fib(n - 2)\n}\n\nexport func main() -\u003e () ! {IO} {\n  let result = fib(20);\n  println(\"Fib(20) = \" ++ show(result))\n}",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}