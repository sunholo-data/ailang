{
  "id": "recursion_factorial",
  "lang": "ailang",
  "model": "gemini-2-5-flash",
  "seed": 42,
  "input_tokens": 6046,
  "output_tokens": 92,
  "total_tokens": 6138,
  "cost_usd": 0.0020438,
  "compile_ok": true,
  "runtime_ok": true,
  "stdout_ok": false,
  "duration_ms": 6,
  "compile_ms": 0,
  "execute_ms": 0,
  "error_category": "logic_error",
  "stdout": "Factorial of 10 is: 3628800\n",
  "expected_stdout": "3628800\n",
  "timestamp": "2025-10-17T14:04:10.375704+02:00",
  "code": "module benchmark/solution\n\nimport std/io (println)\n\nexport func factorial(n: int) -\u003e int {\n  if n \u003c= 1\n  then 1\n  else n * factorial(n - 1)\n}\n\nexport func main() -\u003e () ! {IO} {\n  let result = factorial(10);\n  println(\"Factorial of 10 is: \" ++ show(result))\n}",
  "first_attempt_ok": false,
  "repair_used": false,
  "repair_ok": false
}