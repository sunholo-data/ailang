module examples/demos/effects_pure
import stdlib/std/list (map, foldl)

-- Demonstrate pure functions with list operations
-- No effects - completely pure computation

export pure func sumDoubles(numbers: [int]) -> int {
  let doubled = map(\x. x * 2, numbers) in
  foldl(\acc. \x. acc + x, 0, doubled)
}

-- Example: sumDoubles([1,2,3]) should return 12
-- This function is marked 'pure', guaranteeing no side effects
export pure func demo() -> int {
  sumDoubles([1, 2, 3])
}
